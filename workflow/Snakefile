import os
from snakemake.utils import min_version


# Settings --------------------------------------------------------------------

min_version("6.3.0")

shell.executable("bash")


# Validating samples in rules/common


workdir: config["workdir"]


# Input rules ------------------------------------------------------------------


include: "rules/common.smk"


rule all:
    input:
        "AQUAMIS/reports/summary_report.tsv",
        "AutoQC/autoqc_check.tsv",
        "ChewieSnake/report"


# Includes --------------------------------------------------------------------


include: "rules/metadata.smk"
include: "rules/aquamis.smk"
include: "rules/autoqc.smk"
if config["independent"]:
    include: "rules/chewiesnake_independent.smk"
elif config["integrate"]:
    include: "rules/chewisnake_integrate.smk"
else:
    include: "rules/chewiesnake_compare.smk"



# Workflow --------------------------------------------------------------------


onstart:
    print(f"\nYou are using AutoBak version: {version}")
    with open(pipe_log, "a") as f:
        f.write(f"[{get_local_time()}]: Pipeline started\n")


onsuccess:
    try:
        for logfile in os.listdir(".snakemake/log/"):
            shutil.move(os.path.join(".snakemake/log", logfile), "logs")
        shutil.rmtree(".snakemake", ignore_errors=True)
    except:
        # if not executing .snakemake from workdir,
        # the log file will be in execution directory
        # as far as I know, there is now way to access this form here
        pass
    print("\nWorkflow finished, no error")
    with open(pipe_log, "a") as f:
        f.write(f"[{get_local_time()}]: Pipeline succesfully finished\n")


onerror:
    print(
        f"\nAn error occured, please consider filing an bug report."
        f"\n"
        f"\nIssue tracker: https://github.com/CVUA-RRW/AutoBak/issues"
    )
    with open(pipe_log, "a") as f:
        f.write(f"[{get_local_time()}]: Pipeline stopped on error\n")
